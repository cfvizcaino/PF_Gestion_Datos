# Define upstream servers para cada servicio
upstream personas-crud {
    server personas-crud:3001;
}
upstream consultar-personas {
    server consultar-personas:3003;
}
# upstream consultar-nl-personas {
#     server consultar-nl-personas:3004;
# }

upstream logs-personas {
    server logs-personas:3006;
}

server {
    listen 80;
    server_name localhost;
    
    # Aumentar el tamaño máximo del cuerpo de la solicitud a 5MB
    client_max_body_size 5M;

    # Frontend
    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
        try_files $uri $uri/ /index.html;
    }

    # Crear personas
    location /api/personas/crear {
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization' always;

        if ($request_method = 'OPTIONS') {
            return 204;
        }

        rewrite ^/api/personas/crear(.*)$ /crear$1 break;
        proxy_pass http://personas-crud/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    # Modificar personas
    location /api/personas/modificar {
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'PUT, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization' always;

        if ($request_method = 'OPTIONS') {
            return 204;
        }

        rewrite ^/api/personas/modificar/(.*)$ /modificar/$1 break;
        proxy_pass http://personas-crud/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    # Consultar personas
    location /api/personas/consultar {
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization' always;

        if ($request_method = 'OPTIONS') {
            return 204;
        }

        rewrite ^/api/personas/consultar(.*)$ /$1 break;
        proxy_pass http://consultar-personas/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    # Consultar NL personas
    # location /api/personas/consultar-nl {
    #    ...
    # }

    # Borrar personas
    location /api/personas/borrar {
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization' always;

        if ($request_method = 'OPTIONS') {
            return 204;
        }

        rewrite ^/api/personas/borrar(.*)$ /borrar$1 break;
        proxy_pass http://personas-crud/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    # Consultar logs
    location /api/personas/logs {
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization' always;

        if ($request_method = 'OPTIONS') {
            return 204;
        }

        rewrite ^/api/personas/logs(.*)$ /$1 break;
        proxy_pass http://logs-personas/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    # Rutas de compatibilidad con el anterior monolítico
    location /api/personas/ {
        # Determinar qué microservicio usar según el método HTTP
        if ($request_method = 'POST') {
            rewrite ^/api/personas/(.*)$ /api/personas/crear/$1 last;
        }
        
        # GET sin parámetros - lista todas las personas
        if ($request_method = 'GET') {
            rewrite ^/api/personas/?$ /api/personas/consultar/ last;
        }
    }

    # Rutas para documentos específicos (GET, PUT, DELETE)
    location ~ ^/api/personas/([0-9]+)$ {
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization' always;

        if ($request_method = 'OPTIONS') {
            return 204;
        }

        # GET con ID - consulta una persona específica
        if ($request_method = 'GET') {
            rewrite ^/api/personas/(.*)$ /api/personas/consultar/$1 last;
        }
        # PUT con ID - actualiza una persona específica
        if ($request_method = 'PUT') {
            rewrite ^/api/personas/(.*)$ /api/personas/modificar/$1 last;
        }
        # DELETE con ID - elimina una persona
        if ($request_method = 'DELETE') {
            rewrite ^/api/personas/(.*)$ /api/personas/borrar/$1 last;
        }
    }

    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}