services:
  nginx:
    image: nginx:stable-alpine
    container_name: api-gateway
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - api-gateway-network

  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/.env:/app/.env
    environment:
      - REACT_APP_API_URL=http://localhost
    networks:
      - api-gateway-network
    depends_on:
      - nginx
 
  personas:
    build: 
      context: ./services/personas
      dockerfile: Dockerfile
    container_name: personas
    ports:
      - "3001:3001"
    volumes:
      - ./services/personas/src:/app/src
    depends_on:
      - nginx
      - postgres-db
    environment:
      - DB_HOST=postgres-db
      - DB_USER=admin
      - DB_PASSWORD=admin
      - DB_NAME=gestion_datos
    networks:
      - api-gateway-network

  postgres-db:
    build: 
      context: ./services/postgres
      dockerfile: Dockerfile
    container_name: postgres-db
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: gestion_datos
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always
    networks:
      - api-gateway-network

volumes:
  postgres_data:
    driver: local

networks:
  api-gateway-network:
    driver: bridge


